{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globalFunctions.js", "../src/styles.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// --- Swipers Start ---\nlet windowWidth = window.innerWidth;\n// Create an object to hold unique counters for each classSelector.\nlet uniqueIdCounters = {};\nlet shouldInitializeImmediately = false; // Add this flag at the top of your function\n\nexport const createResponsiveSwiper = (\n  componentSelector,\n  swiperSelector,\n  classSelector,\n  options,\n  mode\n) => {\n  // Step 2: Fetch elements by their componentSelector; if none, exit the function\n  let elements = $(componentSelector).add(swiperSelector);\n  if (elements.length !== 2) return;\n\n  // Reset the uniqueIdCounters for this classSelector to 0\n  uniqueIdCounters[classSelector] = 0;\n\n  // Step 3: Loop through each matched element\n  uniqueIdCounters[classSelector] = uniqueIdCounters[classSelector] || 0;\n  elements.each(function () {\n    // Generate a unique key for this instance based on the classSelector and a counter\n    let uniqueKey = `${classSelector}_${uniqueIdCounters[classSelector]}`;\n\n    // Step 4: Add unique classes to swiper container, arrows and pagination for this instance\n    addUniqueClassesToElements(this, swiperSelector, uniqueKey, [\n      '.swiper-arrow',\n      '.swiper-navigation',\n      '.swiper-drag-wrapper',\n    ]);\n\n    // Step 5: Merge default and passed swiper options\n    let swiperOptions = getMergedSwiperOptions(options, uniqueKey);\n\n    // Step 6: Initialize or destroy swipers based on media query and passed mode\n    manageSwiperInstance(this, swiperSelector, uniqueKey, classSelector, swiperOptions, mode);\n\n    // Increment unique ID counter for the specific classSelector\n    uniqueIdCounters[classSelector]++;\n  });\n};\n\n// Adds unique classes to swiper and control elements\nconst addUniqueClassesToElements = (context, swiperSelector, uniqueKey, controlSelectors) => {\n  controlSelectors.forEach((selector) => {\n    $(context).find(selector).addClass(uniqueKey);\n  });\n  $(context).find(swiperSelector).addClass(uniqueKey);\n};\n\n// Merge default and custom swiper options\nconst getMergedSwiperOptions = (options, uniqueKey) => {\n  // Default pagination config\n  const defaultPagination = {\n    el: `.swiper-navigation.${uniqueKey}`,\n    type: 'bullets',\n    bulletActiveClass: 'swiper-bullet-active',\n    bulletClass: 'swiper-bullet',\n    clickable: true,\n  };\n\n  // Merge pagination options if provided, otherwise use default\n  const paginationConfig = options.pagination\n    ? { ...defaultPagination, ...options.pagination }\n    : defaultPagination;\n\n  // Handle event merging\n  const existingEvents = options.on || {};\n  const enhancedEvents = {\n    ...existingEvents,\n    init: function (...args) {\n      // Call existing init if it exists\n      if (existingEvents.init) {\n        existingEvents.init.apply(this, args);\n      }\n      // Add ScrollTrigger refresh\n      setTimeout(() => {\n        ScrollTrigger.refresh();\n      }, 100);\n    },\n    resize: function (...args) {\n      // Call existing resize if it exists\n      if (existingEvents.resize) {\n        existingEvents.resize.apply(this, args);\n      }\n      ScrollTrigger.refresh();\n    },\n  };\n\n  return {\n    speed: 1000,\n    navigation: {\n      prevEl: `.swiper-arrow.prev.${uniqueKey}`,\n      nextEl: `.swiper-arrow.next.${uniqueKey}`,\n    },\n    mousewheel: {\n      enabled: true,\n      forceToAxis: true,\n      thresholdDelta: 25,\n    },\n    pagination: paginationConfig,\n    ...options,\n    on: enhancedEvents, // Override the 'on' property after spreading options\n  };\n};\n\n// This function manages Swiper instances: initializing or destroying them based on certain conditions\nconst manageSwiperInstance = (\n  context,\n  swiperSelector,\n  uniqueKey,\n  classSelector,\n  swiperOptions,\n  mode\n) => {\n  // Initialize the nested object for storing Swiper instances if it doesn't exist\n  swipers[classSelector] = swipers[classSelector] || {};\n  swipers[classSelector][uniqueKey] = swipers[classSelector][uniqueKey] || {};\n\n  // Fetch the existing Swiper instance information, if it exists\n  let existingInstance = swipers[classSelector][uniqueKey];\n  let existingSwiper = existingInstance.swiperInstance;\n\n  // Determine under what conditions the Swiper should be initialized for desktop and mobile\n  let shouldInitDesktop = mode === 'desktop' && window.matchMedia('(min-width: 992px)').matches;\n  let shouldInitMobile =\n    mode === 'mobile' && window.matchMedia('(min-width: 0px) and (max-width: 991px)').matches;\n  let shouldInitAll = mode === 'all';\n\n  // Destroy function\n  const destroySwiper = () => {\n    if (existingSwiper) {\n      existingSwiper.destroy(true, true);\n      delete swipers[classSelector][uniqueKey];\n      console.log('Swiper destroyed for', swiperSelector, 'with uniqueKey', uniqueKey);\n    }\n  };\n\n  // Reinitialize function\n  const reInitObserver = () => {\n    const swiperElement = $(`${swiperSelector}.${uniqueKey}`)[0];\n    if (!swiperElement) return;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (shouldInitDesktop || shouldInitMobile || shouldInitAll) {\n          if (!existingSwiper) {\n            let swiper = new Swiper(`${swiperSelector}.${uniqueKey}`, swiperOptions);\n            swipers[classSelector][uniqueKey] = {\n              swiperInstance: swiper,\n              mode: shouldInitDesktop ? 'desktop' : shouldInitMobile ? 'mobile' : 'all',\n              initialized: true,\n            };\n            observer.disconnect();\n            console.log('Swiper initialized for', swiperSelector, 'with uniqueKey', uniqueKey);\n          }\n        }\n      });\n    }, {});\n\n    // Store the observer instance\n    swipers[classSelector][uniqueKey].observer = observer;\n\n    // Observe the element\n    observer.observe(swiperElement);\n  };\n\n  // Check the conditions and either destroy or reinitialize\n  if (!shouldInitDesktop && mode === 'desktop') destroySwiper();\n  else if (!shouldInitMobile && mode === 'mobile') destroySwiper();\n  else if (!shouldInitAll && mode === 'all') destroySwiper();\n  else if ((shouldInitDesktop || shouldInitMobile || shouldInitAll) && !existingSwiper) {\n    reInitObserver();\n  }\n};\n\n// Function to initialize swipers from an array of instances\nexport const runSwipers = (swiperInstances) => {\n  swiperInstances.forEach((instance) => {\n    createResponsiveSwiper(...instance);\n  });\n};\n\nexport const initSwipers = (swiperInstances, swipersState) => {\n  // Load\n  runSwipers(swiperInstances);\n\n  // Resize\n  window.addEventListener('resize', function () {\n    if (window.innerWidth !== windowWidth) {\n      windowWidth = window.innerWidth;\n      runSwipers(swiperInstances);\n    }\n  });\n};\n", "import { initSwipers } from './utils/globalFunctions';\n\n$(document).ready(function () {\n  let currentVisual;\n  let currentColor = 0;\n  let noColor = !$('.styles_hero-color_list').length;\n  let noSwiper = !$('.section_styles-hero .swiper-tabs').length;\n\n  function updateColorType(index) {\n    let pickerVisuals = $('.styles_hero-visual');\n\n    if (noColor) {\n      pickerVisuals = pickerVisuals.find('img');\n    }\n\n    // Reset\n    pickerVisuals.hide();\n    pickerVisuals.find('img').hide();\n    pickerVisuals.each(function () {\n      $(this).find('img').eq(currentColor).show();\n    });\n\n    currentVisual = pickerVisuals.eq(index);\n    currentVisual.css('display', 'flex');\n\n    // Count images in current visual and update color items\n    const imgCount = currentVisual.find('img').length;\n\n    // Check if the currently active color index is valid for this visual\n    if (currentColor >= imgCount) {\n      // Reset to the first color if current selection is out of range\n      currentColor = 0;\n\n      // Make sure we update the visual to show the first color\n      currentVisual.find('img').hide();\n      currentVisual.find('img').eq(currentColor).show();\n    }\n\n    // Update color item visibility based on available options\n    $('.styles_hero-color_item').each(function (i) {\n      if (i < imgCount) {\n        $(this).show();\n      } else {\n        $(this).hide();\n      }\n    });\n\n    // Reset active state to match currentColor\n    $('.styles_hero-color_item').find('.styles_hero-color_item-inner').removeClass('is-active');\n    $('.styles_hero-color_item')\n      .eq(currentColor)\n      .find('.styles_hero-color_item-inner')\n      .addClass('is-active');\n\n    // Update the label\n    const activeItemLabel = $('.styles_hero-color_item')\n      .eq(currentColor)\n      .find('.styles_hero-color_item-label')\n      .text();\n    $('.styles_hero-color_item-label.cc-top').find('p').text(activeItemLabel);\n  }\n\n  function initColorPicker() {\n    let pickerList = $('.styles_hero-color_list');\n    let pickerItem = $('.styles_hero-color_item');\n    let circle = '.styles_hero-color_item-inner';\n    let label = '.styles_hero-color_item-label';\n\n    $(circle).eq(0).addClass('is-active');\n\n    pickerList.find(pickerItem).on('click', function () {\n      let index = $(this).index();\n\n      // Active Class\n      pickerItem.find(circle).removeClass('is-active');\n      pickerItem.eq(index).find(circle).addClass('is-active');\n\n      // Label\n      $(label).filter('.cc-top').find('p').text($(this).find(label).text());\n\n      // Visual\n      currentColor = index;\n      currentVisual.find('img').hide();\n      currentVisual.find('img').eq(currentColor).fadeIn();\n    });\n  }\n\n  // Sample data for swiperInstances, specific to this page\n  const swiperInstances = [\n    [\n      '.section_styles-hero',\n      '.swiper-tabs',\n      'tabs-slider',\n      {\n        slidesPerView: 'auto',\n        loop: true,\n        threshold: 100,\n        slideToClickedSlide: true,\n        on: {\n          init: () => {\n            updateColorType(0);\n            initColorPicker();\n          },\n          slideChange: (swiper) => {\n            updateColorType(swiper.realIndex);\n          },\n        },\n      },\n      'all',\n    ],\n  ];\n\n  // Fallback for no slider configuration\n  if (noSwiper) {\n    noSwiper = true;\n    updateColorType(0);\n    initColorPicker();\n  }\n\n  // Initialize swipers with instances specific to this page\n  initSwipers(swiperInstances);\n});\n"],
  "mappings": "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",
  "names": []
}
