{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/plyr-video.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "const allPlayers = [];\nconst lazyVideos = new Map();\n\nconst videoModes = {\n  preview: {\n    muted: true,\n    clickToPlay: false,\n    showOverlay: true,\n    controls: ['play', 'progress', 'mute'],\n    hideControls: true,\n  },\n  direct: {\n    muted: false,\n    clickToPlay: true,\n    showOverlay: false,\n    controls: ['play', 'progress', 'mute', 'fullscreen'],\n    hideControls: false,\n  },\n  silent: {\n    muted: true,\n    clickToPlay: true,\n    showOverlay: false,\n    controls: ['play', 'progress'],\n    hideControls: false,\n  },\n};\n\n// Public API\nwindow.VideoSystem = {\n  init: initVideos,\n  initSwiper: initSwiperVideos,\n  playActiveSlide: playActiveSlideVideo,\n  pauseAll: pauseAllVideos,\n  modes: videoModes,\n  preload: preloadVideo,\n};\n\n// Main initialization function\nfunction initVideos(selector = '.plyr_video', mode = 'preview', lazy = true) {\n  if (lazy) {\n    setupLazyLoading(selector, mode);\n  } else {\n    $(selector).each(function () {\n      initSingleVideo($(this), mode);\n    });\n  }\n}\n\n// Lazy loading setup with intersection observer\nfunction setupLazyLoading(selector, mode) {\n  const observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          const $video = $(entry.target);\n          const storedMode = lazyVideos.get(entry.target) || mode;\n          initSingleVideo($video, storedMode);\n          observer.unobserve(entry.target);\n          lazyVideos.delete(entry.target);\n        }\n      });\n    },\n    { rootMargin: '100px', threshold: 0.1 }\n  );\n\n  $(selector).each(function () {\n    if (!$(this).data('plyr-initialized')) {\n      const customMode = $(this).parent().attr('data-video-mode') || mode;\n      lazyVideos.set(this, customMode);\n      observer.observe(this);\n    }\n  });\n}\n\n// Preload specific video\nfunction preloadVideo(selector, mode = 'preview') {\n  const $video = $(selector);\n  if ($video.length && !$video.data('plyr-initialized')) {\n    initSingleVideo($video, mode);\n  }\n}\n\n// Set video attributes from data attributes\nfunction setupVideoAttributes($video) {\n  if ($video.data('attrs-set')) return;\n\n  const $parent = $video.parent();\n  const videoSrc = $parent.attr('data-video-src');\n  const posterSrc = $parent.attr('data-poster-src');\n\n  if (posterSrc) $video.attr('poster', posterSrc);\n  if (videoSrc) $video.attr('src', videoSrc);\n  $video.attr('preload', 'metadata');\n  $video.data('attrs-set', true);\n}\n\n// Initialize single video player\nfunction initSingleVideo($video, mode = 'preview') {\n  if ($video.data('plyr-initialized')) return;\n\n  setupVideoAttributes($video);\n\n  const $parent = $video.parent();\n  const customMode = $parent.attr('data-video-mode') || mode;\n  const config = videoModes[customMode] || videoModes.preview;\n\n  const player = new Plyr($video[0], {\n    controls: config.controls,\n    clickToPlay: config.clickToPlay,\n    muted: config.muted,\n    resetOnEnd: true,\n  });\n\n  player.on('ready', () => {\n    player.muted = config.muted;\n    if (config.hideControls) {\n      $parent.find('.plyr__controls').hide();\n    }\n  });\n\n  allPlayers.push(player);\n  $video.data('plyr-initialized', true);\n  $video.data('video-mode', customMode);\n\n  initControls($parent, player, config);\n}\n\n// Initialize videos in Swiper slides\nfunction initSwiperVideos(swiperInstance, mode = 'preview', lazy = true, autoPlayActive = false) {\n  if (lazy) {\n    setupSwiperLazyLoading(swiperInstance, mode, autoPlayActive);\n  } else {\n    // Load all videos immediately\n    $(swiperInstance.slides)\n      .find('.plyr_video')\n      .each(function () {\n        setupVideoAttributes($(this));\n        initSingleVideo($(this), mode);\n      });\n  }\n}\n\n// Setup lazy loading for Swiper videos\nfunction setupSwiperLazyLoading(swiperInstance, mode, autoPlayActive) {\n  const loadSlideVideo = ($slide) => {\n    if (!$slide.length) return;\n    const $video = $slide.find('.plyr_video');\n    if ($video.length && !$video.data('plyr-initialized')) {\n      setupVideoAttributes($video);\n      preloadVideo($video, mode);\n    }\n  };\n\n  const playActiveSlidePreview = (swiper) => {\n    if (!autoPlayActive) return;\n\n    console.log(swiper);\n\n    const activeSlide = $(swiper.slides[swiper.activeIndex]);\n    const $video = activeSlide.find('.plyr_video');\n\n    if ($video.length) {\n      handleVideoPlayback($video, mode);\n    }\n  };\n\n  // Swiper event handlers\n  swiperInstance.on('slideChange', function () {\n    const activeSlide = $(this.slides[this.activeIndex]);\n    const nextSlide = $(this.slides[this.activeIndex + 1]);\n    const prevSlide = $(this.slides[this.activeIndex - 1]);\n\n    [activeSlide, nextSlide, prevSlide].forEach(loadSlideVideo);\n\n    if (autoPlayActive) {\n      playActiveSlidePreview(this);\n    }\n  });\n\n  swiperInstance.on('afterInit', function () {\n    // Setup video attributes for all slides\n    $(this.slides).each(function () {\n      const $video = $(this).find('.plyr_video');\n      if ($video.length) {\n        setupVideoAttributes($video);\n      }\n    });\n\n    // Preload first slide video\n    const $firstSlideVideo = $(this.slides[this.activeIndex]).find('.plyr_video');\n    if ($firstSlideVideo.length) {\n      preloadVideo($firstSlideVideo, mode);\n    }\n\n    playActiveSlidePreview(this);\n  });\n\n  // Handle already initialized swiper\n  if (swiperInstance.initialized) {\n    $(swiperInstance.slides).each(function () {\n      const $video = $(this).find('.plyr_video');\n      if ($video.length) {\n        setupVideoAttributes($video);\n      }\n    });\n\n    const $firstSlideVideo = $(swiperInstance.slides[swiperInstance.activeIndex]).find(\n      '.plyr_video'\n    );\n    if ($firstSlideVideo.length) {\n      preloadVideo($firstSlideVideo, mode);\n    }\n\n    playActiveSlidePreview(swiperInstance);\n  }\n}\n\n// Handle video playback with proper initialization\nfunction handleVideoPlayback($video, mode) {\n  if (!$video.data('plyr-initialized')) {\n    setupVideoAttributes($video);\n    preloadVideo($video, mode);\n\n    const checkPlayerReady = (attempts = 0) => {\n      if (attempts > 20) return;\n\n      const player = allPlayers.find((p) => p.media === $video[0]);\n      if (player && player.ready) {\n        if (mode === 'preview') {\n          pauseAllVideos();\n          player.muted = true;\n          player.play().catch(() => {});\n        }\n      } else {\n        setTimeout(() => checkPlayerReady(attempts + 1), 50);\n      }\n    };\n\n    setTimeout(() => checkPlayerReady(), 200);\n  } else {\n    const player = allPlayers.find((p) => p.media === $video[0]);\n    if (player && mode === 'preview') {\n      pauseAllVideos($video);\n      player.muted = true;\n      player.play().catch(() => {});\n    }\n  }\n}\n\n// Play video in full mode (unmuted)\nfunction playFullVideo(player) {\n  player.muted = false;\n  player.restart();\n  player.play();\n}\n\n// Initialize video controls and interactions\nfunction initControls($parent, player, config) {\n  const component = $parent.closest('[data-plyr=\"component\"]');\n  const overlay = component.find('[data-plyr=\"overlay\"]');\n\n  if (!config.showOverlay) {\n    overlay.hide();\n    return;\n  }\n\n  // Overlay click handler\n  overlay.on('click', function () {\n    overlay.hide();\n    playFullVideo(player);\n    $parent.find('.plyr__controls').show();\n  });\n\n  // Hover play functionality\n  if (component.attr('data-plyr-play') === 'hover') {\n    component.on('mouseenter', function () {\n      player.play();\n      if (config.showOverlay) overlay.hide();\n      player.muted = true;\n      $parent.find('.plyr__controls').show();\n    });\n\n    component.on('mouseleave', function () {\n      player.pause();\n      if (config.showOverlay) overlay.show();\n      player.restart();\n      player.muted = true;\n      if (config.hideControls) {\n        $parent.find('.plyr__controls').hide();\n      }\n    });\n  }\n\n  // Click to play/pause (excluding controls and overlay)\n  $parent.on('click', function (e) {\n    if (\n      !$(e.target).closest('.plyr__controls').length &&\n      !$(e.target).closest('[data-plyr=\"overlay\"]').length\n    ) {\n      if (player.playing) {\n        player.pause();\n      } else {\n        player.play();\n      }\n    }\n  });\n}\n\n// Pause all videos with optional context\nfunction pauseAllVideos(context = null, excludePreview = false) {\n  if (context) {\n    const $section = $(context).closest('section');\n    const sectionPlayers = [];\n\n    $section.find('.plyr_video').each(function () {\n      if ($(this).data('plyr-initialized')) {\n        const player = allPlayers.find((p) => p.media === this);\n        if (player) {\n          const videoMode = $(this).data('video-mode');\n          if (!excludePreview || videoMode !== 'preview') {\n            sectionPlayers.push(player);\n          }\n        }\n      }\n    });\n\n    sectionPlayers.forEach((player) => {\n      player.pause();\n      player.restart();\n      player.muted = true;\n    });\n\n    if (!excludePreview) {\n      $section.find('[data-plyr=\"overlay\"]').show();\n      $section.find('.plyr__controls').hide();\n    }\n  } else {\n    allPlayers.forEach((player) => {\n      const $video = $(player.media);\n      const videoMode = $video.data('video-mode');\n\n      if (!excludePreview || videoMode !== 'preview') {\n        player.pause();\n        player.restart();\n        player.muted = true;\n      }\n    });\n\n    if (!excludePreview) {\n      $('[data-plyr=\"overlay\"]').show();\n      $('.plyr__controls').hide();\n    }\n  }\n}\n\n// Play video in active slide\nfunction playActiveSlideVideo(activeSlide, state) {\n  const $video = $(activeSlide).find('.plyr_video').first();\n  if (!$video.length) return;\n\n  // Initialize video if not already done\n  if (!$video.data('plyr-initialized')) {\n    const mode = $video.parent().attr('data-video-mode') || 'preview';\n    initSingleVideo($video, mode);\n  }\n\n  const player = allPlayers.find((p) => p.media === $video[0]);\n  if (!player) return;\n\n  pauseAllVideos(activeSlide);\n  player.play();\n\n  // If state is true, play in full mode\n  if (state) {\n    playFullVideo(player);\n    $(activeSlide).find('.plyr__controls').show();\n  }\n}\n\n// Auto-initialize on document ready\n$(document).ready(() => initVideos());\n"],
  "mappings": "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",
  "names": []
}
