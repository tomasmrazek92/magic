{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/plyr-video.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Store players by section ID to manage them independently\nconst playersBySection = new Map();\nconst loadedSections = new Set();\n\nfunction initVideos() {\n  // Find all sections containing videos\n  const videoSections = $('section:has(.plyr_video)');\n  if (!videoSections.length) return;\n\n  const isMobile = window.innerWidth <= 991;\n\n  // Create observer for lazy loading\n  const observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        const sectionId = entry.target.id || `video-section-${Date.now()}`;\n\n        if (entry.isIntersecting && !loadedSections.has(sectionId)) {\n          loadSectionVideos(entry.target, sectionId, isMobile);\n          loadedSections.add(sectionId);\n          // Only disconnect observer for this specific section\n          observer.unobserve(entry.target);\n        }\n      });\n    },\n    { threshold: 0.1 }\n  );\n\n  // Observe each section independently\n  videoSections.each(function () {\n    if (!this.id) {\n      this.id = `video-section-${Date.now()}`;\n    }\n    observer.observe(this);\n  });\n}\n\nfunction loadSectionVideos(section, sectionId, isMobile) {\n  const sectionVideos = $(section).find('.plyr_video');\n  const sectionPlayers = [];\n  playersBySection.set(sectionId, sectionPlayers);\n\n  sectionVideos.each(function () {\n    const $video = $(this);\n    const $parent = $video.parent();\n    const videoSrc = $parent.attr('data-video-src');\n    const posterSrc = $parent.attr('data-poster-src');\n\n    if (posterSrc) $video.attr('poster', posterSrc);\n    $video.attr('src', videoSrc);\n    $video.attr('preload', 'auto');\n\n    const playerOptions = {\n      controls: ['play', 'mute'],\n      clickToPlay: false,\n      muted: true,\n      resetOnEnd: true,\n      poster: posterSrc,\n    };\n\n    const player = new Plyr($video, playerOptions);\n\n    player.on('ready', () => {\n      player.muted = true;\n    });\n\n    sectionPlayers.push(player);\n\n    if (isMobile) {\n      initMobileControls($parent, player, $video[0], sectionId);\n    } else {\n      initDesktopControls($parent, player, $video[0], sectionId);\n    }\n  });\n}\n\nfunction initMobileControls($parent, player, videoElement, sectionId) {\n  let isPlaying = false;\n\n  $parent.on('click', function (e) {\n    e.preventDefault();\n\n    if (!isPlaying) {\n      pauseOtherPlayers(videoElement, sectionId);\n      player.once('playing', () => {\n        isPlaying = true;\n      });\n      player.muted = false;\n      player.play();\n    } else {\n      player.pause();\n      player.muted = true;\n      isPlaying = false;\n    }\n  });\n}\n\nfunction initDesktopControls($parent, player, videoElement, sectionId) {\n  $parent.on('mouseenter', function () {\n    pauseOtherPlayers(videoElement, sectionId);\n    player.play();\n  });\n\n  $parent.on('mouseleave', function () {\n    player.pause();\n    player.restart();\n    player.muted = true;\n  });\n\n  $parent.on('click', function (e) {\n    e.preventDefault();\n    player.muted = !player.muted;\n  });\n}\n\nfunction pauseOtherPlayers(currentVideo, sectionId) {\n  const sectionPlayers = playersBySection.get(sectionId) || [];\n  sectionPlayers.forEach(function (player) {\n    if (player.media !== currentVideo) {\n      player.pause();\n      player.restart();\n      player.muted = true;\n    }\n  });\n}\n\n// Initialize on document ready\n$(document).ready(initVideos);\n\n// Reinitialize on dynamic content changes if needed\n// $(document).on('contentChanged', initVideos);\n"],
  "mappings": "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",
  "names": []
}
