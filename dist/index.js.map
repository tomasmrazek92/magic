{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "$(document).ready(() => {\n  // #region Menu and Sticky CTA\n  const banner = $('.cta_banner');\n  const navbar = $('.navbar');\n  const footer = $('.footer-box');\n  const scrollHeight = $(navbar).height();\n\n  $(window).on('scroll', () => {\n    if (banner.length) {\n      // Calculate viewport bottom position\n      const viewportBottom = $(window).scrollTop() + $(window).height();\n      // Get footer top position\n      const footerTop = footer.offset().top;\n\n      // First check if we've scrolled past initial threshold\n      if (window.scrollY > scrollHeight * 2) {\n        // Then check footer visibility\n        if (viewportBottom >= footerTop) {\n          banner.removeClass('active');\n        } else {\n          banner.addClass('active');\n        }\n      } else {\n        banner.removeClass('active');\n      }\n    }\n    if (navbar.length) {\n      // First check if we've scrolled past initial threshold\n      if (window.scrollY > scrollHeight * 2) {\n        navbar.addClass('fixed');\n      } else {\n        navbar.removeClass('fixed');\n      }\n    }\n  });\n\n  // Click\n  // Function to create observer and handle class change\n  function createObserver(targetSelector, callback) {\n    const targetNodes = $(targetSelector);\n    targetNodes.each(function () {\n      const observer = new MutationObserver((mutationsList) => {\n        mutationsList.forEach((mutation) => {\n          if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n            callback(mutation.target);\n          }\n        });\n      });\n      observer.observe(this, { attributes: true, attributeFilter: ['class'] }); // Pass the DOM node directly\n    });\n  }\n  function dropdownCallback(targetElement) {\n    if ($(targetElement).hasClass('w--open')) {\n      navbar.addClass('open');\n    } else {\n      navbar.removeClass('open');\n    }\n  }\n\n  // Opened Menu\n  // --- Scroll Disabler\n  let scrollPosition;\n  let menuOpen = false;\n\n  const disableScroll = () => {\n    dropdownCallback('.w-nav-button');\n    if (!menuOpen) {\n      scrollPosition = $(window).scrollTop();\n      $('html, body').scrollTop(0).addClass('overflow-hidden');\n      $('.nav').addClass('open');\n    } else {\n      $('html, body').scrollTop(scrollPosition).removeClass('overflow-hidden');\n      $('.nav').removeClass('open');\n    }\n    menuOpen = !menuOpen;\n  };\n\n  // Create observers for the elements with their respective callbacks\n  createObserver('.w-nav-button', disableScroll);\n  // #endregion\n\n  // #region Modals\n  function initModalBasic() {\n    const modalGroup = document.querySelector('[data-modal-group-status]');\n    const modals = document.querySelectorAll('[data-modal-name]');\n    const modalTargets = document.querySelectorAll('[data-modal-target]');\n\n    // Open modal\n    modalTargets.forEach((modalTarget) => {\n      modalTarget.addEventListener('click', function () {\n        const modalTargetName = this.getAttribute('data-modal-target');\n\n        // Close all modals\n        modalTargets.forEach((target) => target.setAttribute('data-modal-status', 'not-active'));\n        modals.forEach((modal) => modal.setAttribute('data-modal-status', 'not-active'));\n\n        // Activate clicked modal\n        document\n          .querySelector(`[data-modal-target=\"${modalTargetName}\"]`)\n          .setAttribute('data-modal-status', 'active');\n        document\n          .querySelector(`[data-modal-name=\"${modalTargetName}\"]`)\n          .setAttribute('data-modal-status', 'active');\n\n        // Set group to active\n        if (modalGroup) {\n          modalGroup.setAttribute('data-modal-group-status', 'active');\n        }\n      });\n    });\n\n    // Close modal\n    document.querySelectorAll('[data-modal-close]').forEach((closeBtn) => {\n      closeBtn.addEventListener('click', closeAllModals);\n    });\n\n    // Close modal on `Escape` key\n    document.addEventListener('keydown', function (event) {\n      if (event.key === 'Escape') {\n        closeAllModals();\n      }\n    });\n\n    // Function to close all modals\n    function closeAllModals() {\n      modalTargets.forEach((target) => target.setAttribute('data-modal-status', 'not-active'));\n\n      if (modalGroup) {\n        modalGroup.setAttribute('data-modal-group-status', 'not-active');\n      }\n    }\n  }\n\n  initModalBasic();\n  // #endregion\n\n  // #region videoScroll\n  function initVideoScroll(config = {}) {\n    const defaults = {\n      containerSelector: '.section_window-scroll-wall',\n      videoSelector: '.window-scroll-wall_video video',\n      labelSelector: '.window-scroll-wall_label',\n      loadingElement: '.window-scroll-wall_loading',\n      loadingClass: 'wall-loading',\n      labels: [],\n      scrubSpeed: 0.5,\n      fadeOverlap: 0.1,\n    };\n\n    const settings = { ...defaults, ...config };\n    const $video = $(settings.videoSelector);\n    const $videoContainer = $(settings.containerSelector);\n    if (!$videoContainer.length) return;\n    const video = $video[0];\n    const labels = $(settings.labelSelector);\n    const totalLabels = labels.length;\n\n    function getLabelTimings() {\n      return labels\n        .map((index, label) => {\n          const customTiming = settings.labels[index];\n          const segmentSize = 1 / totalLabels;\n          return {\n            element: $(label),\n            start: customTiming?.start / 100 ?? index * segmentSize,\n            end: customTiming?.end / 100 ?? (index + 1) * segmentSize,\n          };\n        })\n        .get();\n    }\n\n    // Ensure autoplay and visibility on mobile\n    video.muted = true;\n    video.playsInline = true;\n    video.setAttribute('playsinline', '');\n    video.style.visibility = 'visible';\n\n    function initScrollTrigger() {\n      gsap.registerPlugin(ScrollTrigger);\n\n      const labelTimings = getLabelTimings();\n      let lastTime = -1;\n      let seekRequest;\n      let isRendering = false;\n\n      // Create a buffer of the last few target times to smooth out rapid changes\n      const timeBuffer = [];\n      const BUFFER_SIZE = 3;\n\n      // Function to get the smoothed time value\n      function getSmoothedTime(newTime) {\n        // Add the new time to our buffer\n        timeBuffer.push(newTime);\n\n        // Keep the buffer at our desired size\n        while (timeBuffer.length > BUFFER_SIZE) {\n          timeBuffer.shift();\n        }\n\n        // If we don't have enough values yet, just return the new time\n        if (timeBuffer.length < 2) return newTime;\n\n        // Calculate the weighted average, giving more weight to recent values\n        let totalWeight = 0;\n        let weightedSum = 0;\n\n        for (let i = 0; i < timeBuffer.length; i++) {\n          const weight = i + 1; // 1, 2, 3, etc. - newer values have higher weight\n          weightedSum += timeBuffer[i] * weight;\n          totalWeight += weight;\n        }\n\n        return weightedSum / totalWeight;\n      }\n\n      // A more efficient rendering loop\n      function renderLoop() {\n        if (!isRendering) return;\n\n        if (Math.abs(targetTime - video.currentTime) > 0.01) {\n          video.currentTime = targetTime;\n        }\n\n        requestAnimationFrame(renderLoop);\n      }\n\n      // Store the target time globally\n      let targetTime = 0;\n\n      const tl = gsap.timeline({\n        scrollTrigger: {\n          trigger: settings.containerSelector,\n          start: 'top top',\n          end: 'bottom bottom',\n          scrub: true, // Use true instead of a number for smoother scrolling\n          onUpdate: (self) => {\n            // Calculate raw target time from progress\n            const rawTargetTime = self.progress * video.duration;\n\n            // Apply smoothing\n            targetTime = getSmoothedTime(rawTargetTime);\n\n            // Start rendering loop if it's not already running\n            if (!isRendering) {\n              isRendering = true;\n              renderLoop();\n            }\n\n            // Handle label opacity\n            labelTimings.forEach((timing) => {\n              const fadeSize = settings.fadeOverlap;\n              const duration = timing.end - timing.start;\n              const fadeDuration = Math.min(fadeSize * duration, duration / 3);\n\n              let opacity = 0;\n              if (self.progress >= timing.start && self.progress <= timing.end) {\n                if (self.progress < timing.start + fadeDuration) {\n                  opacity = (self.progress - timing.start) / fadeDuration;\n                } else if (self.progress > timing.end - fadeDuration) {\n                  opacity = (timing.end - self.progress) / fadeDuration;\n                } else {\n                  opacity = 1;\n                }\n              }\n              timing.element.css('opacity', Math.max(0, Math.min(1, opacity)));\n            });\n          },\n          onEnter: () => {\n            targetTime = 0;\n            video.currentTime = 0;\n          },\n          onLeave: () => {\n            targetTime = video.duration;\n            video.currentTime = video.duration;\n          },\n          onEnterBack: () => {\n            targetTime = video.duration;\n            video.currentTime = video.duration;\n          },\n          onLeaveBack: () => {\n            targetTime = 0;\n            video.currentTime = 0;\n          },\n          // This will make the scrolling smoother by using RAF\n          fastScrollEnd: true,\n        },\n      });\n\n      // Stop the rendering loop when user is not scrolling\n      ScrollTrigger.addEventListener('scrollEnd', function () {\n        isRendering = false;\n      });\n\n      // Also stop rendering when the page is not visible\n      document.addEventListener('visibilitychange', function () {\n        isRendering = !document.hidden && ScrollTrigger.isScrolling();\n      });\n    }\n    function ensureVideoReady(video) {\n      return new Promise((resolve) => {\n        // Set up video attributes\n        video.setAttribute('preload', 'auto');\n        video.setAttribute('playsinline', '');\n        video.muted = true;\n\n        // Hide video during preloading (using both opacity and visibility)\n        video.style.opacity = '0';\n        video.style.visibility = 'hidden';\n\n        // Track loaded segments\n        const segmentSize = 10; // Number of segments to split the video into\n        const loadedSegments = new Array(segmentSize).fill(false);\n\n        // Function to check if all segments are loaded\n        function allSegmentsLoaded() {\n          return loadedSegments.every((segment) => segment === true);\n        }\n\n        // Function to preload specific segment\n        function preloadSegment(index) {\n          return new Promise((resolve) => {\n            const segmentDuration = video.duration / segmentSize;\n            const targetTime = index * segmentDuration;\n\n            console.log(\n              `Preloading segment ${index + 1}/${segmentSize} at time ${targetTime.toFixed(2)}`\n            );\n\n            // Set to target time\n            video.currentTime = targetTime;\n\n            // Function to check if the segment is loaded\n            function checkSegmentLoaded() {\n              // If we can play at this position, mark segment as loaded\n              if (video.readyState === 4) {\n                loadedSegments[index] = true;\n                resolve();\n              } else {\n                // Check again after a short delay\n                setTimeout(checkSegmentLoaded, 200);\n              }\n            }\n\n            // Start checking\n            checkSegmentLoaded();\n          });\n        }\n\n        // Sequential segment loading with forced plays\n        async function forceLoadAllSegments() {\n          // Wait for video metadata to load first\n          if (video.readyState === 0) {\n            await new Promise((resolve) => {\n              video.addEventListener('loadedmetadata', resolve, { once: true });\n              video.load();\n            });\n          }\n\n          // Try playing through the video first to help with preloading\n          try {\n            video.currentTime = 0;\n            video.playbackRate = 8; // Fast forward\n            await video.play();\n\n            // Let it play for a bit\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n            video.pause();\n          } catch (err) {\n            console.warn('Fast preload attempt failed:', err);\n          }\n\n          // Now try to load each segment specifically\n          for (let i = 0; i < segmentSize; i++) {\n            await preloadSegment(i);\n\n            // Update loading progress if possible\n            if (settings.loadingElement) {\n              const progress = (((i + 1) / segmentSize) * 100).toFixed(0);\n              $(settings.loadingElement).find('.progress-text').text(`${progress}%`);\n            }\n          }\n\n          // Final verification - check random points\n          for (let i = 0; i < 3; i++) {\n            const randomTime = Math.random() * video.duration;\n            video.currentTime = randomTime;\n            await new Promise((resolve) => setTimeout(resolve, 300));\n          }\n\n          // Reset video to beginning\n          video.currentTime = 0;\n\n          // Show video and hide loader\n          video.style.opacity = '1';\n          video.style.visibility = 'visible';\n\n          if (settings.loadingElement) {\n            $(settings.loadingElement).hide();\n          }\n\n          if (settings.containerSelector && settings.loadingClass) {\n            $(settings.containerSelector).removeClass(settings.loadingClass);\n          }\n\n          resolve(video);\n        }\n\n        // Start the loading process\n        forceLoadAllSegments().catch((err) => {\n          console.error('Error during video preloading:', err);\n\n          // Fallback: just show the video and hide loader even if preloading failed\n          video.style.opacity = '1';\n          video.style.visibility = 'visible';\n\n          if (settings.loadingElement) {\n            $(settings.loadingElement).hide();\n          }\n\n          if (settings.containerSelector && settings.loadingClass) {\n            $(settings.containerSelector).removeClass(settings.loadingClass);\n          }\n\n          resolve(video);\n        });\n      });\n    }\n\n    // Initial set\n    gsap.set(labels, { opacity: 0 });\n    $(settings.containerSelector).addClass(settings.loadingClass);\n\n    // Video play\n    ensureVideoReady(video)\n      .then(() => {\n        // console.log('\uD83C\uDFD7\uFE0F Initializing ScrollTrigger...');\n        initScrollTrigger();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  initVideoScroll({\n    containerSelector: '.section_window-scroll-wall',\n    labels: [\n      { start: 0, end: 22 }, // 0:00 - 2:00\n      { start: 22, end: 34 }, // 2:00 - 3:07\n      { start: 34, end: 62 }, // 3:07 - 4:96\n      { start: 62, end: 66 }, // 4:96 - 6:00\n      { start: 66, end: 75 }, // 6:00 - 6:50\n      { start: 75, end: 85 }, // 6:50 - 7:00\n      { start: 85, end: 90 }, // 7:00 - 8:00\n      { start: 90, end: 100 }, // 8:00 - 9:04\n    ],\n  });\n\n  initVideoScroll({\n    containerSelector: '.section_windowwall-scroll-wall',\n    labels: [\n      { start: 0, end: 20 }, // 0:00 - 1:50\n      { start: 58, end: 75 }, // 1:50 - 2:65\n      { start: 75, end: 85 }, // 2:65 - 3:80\n      { start: 85, end: 100 }, // 3:80 - 4:80\n    ],\n  });\n\n  initVideoScroll({\n    containerSelector: '.section_patiodoors-scroll-wall',\n    labels: [\n      { start: 0, end: 14 }, // 0:00 - 1:00\n      { start: 14, end: 29 }, // 1:00 - 2:00\n      { start: 29, end: 62 }, // 2:00 - 3:20\n      { start: 60, end: 70 }, // 3:20 - 5:00\n      { start: 70, end: 80 }, // 3:20 - 5:00 (duplicate)\n      { start: 80, end: 90 }, // 5:00 - 6:00\n      { start: 90, end: 100 }, // 6:00 - 7:00\n    ],\n  });\n\n  // #endregion\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACA7F,IAAE,QAAQ,EAAE,MAAM,MAAM;AAEtB,UAAM,SAAS,EAAE,aAAa;AAC9B,UAAM,SAAS,EAAE,SAAS;AAC1B,UAAM,SAAS,EAAE,aAAa;AAC9B,UAAM,eAAe,EAAE,MAAM,EAAE,OAAO;AAEtC,MAAE,MAAM,EAAE,GAAG,UAAU,MAAM;AAC3B,UAAI,OAAO,QAAQ;AAEjB,cAAM,iBAAiB,EAAE,MAAM,EAAE,UAAU,IAAI,EAAE,MAAM,EAAE,OAAO;AAEhE,cAAM,YAAY,OAAO,OAAO,EAAE;AAGlC,YAAI,OAAO,UAAU,eAAe,GAAG;AAErC,cAAI,kBAAkB,WAAW;AAC/B,mBAAO,YAAY,QAAQ;AAAA,UAC7B,OAAO;AACL,mBAAO,SAAS,QAAQ;AAAA,UAC1B;AAAA,QACF,OAAO;AACL,iBAAO,YAAY,QAAQ;AAAA,QAC7B;AAAA,MACF;AACA,UAAI,OAAO,QAAQ;AAEjB,YAAI,OAAO,UAAU,eAAe,GAAG;AACrC,iBAAO,SAAS,OAAO;AAAA,QACzB,OAAO;AACL,iBAAO,YAAY,OAAO;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC;AAID,aAAS,eAAe,gBAAgB,UAAU;AAChD,YAAM,cAAc,EAAE,cAAc;AACpC,kBAAY,KAAK,WAAY;AAC3B,cAAM,WAAW,IAAI,iBAAiB,CAAC,kBAAkB;AACvD,wBAAc,QAAQ,CAAC,aAAa;AAClC,gBAAI,SAAS,SAAS,gBAAgB,SAAS,kBAAkB,SAAS;AACxE,uBAAS,SAAS,MAAM;AAAA,YAC1B;AAAA,UACF,CAAC;AAAA,QACH,CAAC;AACD,iBAAS,QAAQ,MAAM,EAAE,YAAY,MAAM,iBAAiB,CAAC,OAAO,EAAE,CAAC;AAAA,MACzE,CAAC;AAAA,IACH;AACA,aAAS,iBAAiB,eAAe;AACvC,UAAI,EAAE,aAAa,EAAE,SAAS,SAAS,GAAG;AACxC,eAAO,SAAS,MAAM;AAAA,MACxB,OAAO;AACL,eAAO,YAAY,MAAM;AAAA,MAC3B;AAAA,IACF;AAIA,QAAI;AACJ,QAAI,WAAW;AAEf,UAAM,gBAAgB,MAAM;AAC1B,uBAAiB,eAAe;AAChC,UAAI,CAAC,UAAU;AACb,yBAAiB,EAAE,MAAM,EAAE,UAAU;AACrC,UAAE,YAAY,EAAE,UAAU,CAAC,EAAE,SAAS,iBAAiB;AACvD,UAAE,MAAM,EAAE,SAAS,MAAM;AAAA,MAC3B,OAAO;AACL,UAAE,YAAY,EAAE,UAAU,cAAc,EAAE,YAAY,iBAAiB;AACvE,UAAE,MAAM,EAAE,YAAY,MAAM;AAAA,MAC9B;AACA,iBAAW,CAAC;AAAA,IACd;AAGA,mBAAe,iBAAiB,aAAa;AAI7C,aAAS,iBAAiB;AACxB,YAAM,aAAa,SAAS,cAAc,2BAA2B;AACrE,YAAM,SAAS,SAAS,iBAAiB,mBAAmB;AAC5D,YAAM,eAAe,SAAS,iBAAiB,qBAAqB;AAGpE,mBAAa,QAAQ,CAAC,gBAAgB;AACpC,oBAAY,iBAAiB,SAAS,WAAY;AAChD,gBAAM,kBAAkB,KAAK,aAAa,mBAAmB;AAG7D,uBAAa,QAAQ,CAAC,WAAW,OAAO,aAAa,qBAAqB,YAAY,CAAC;AACvF,iBAAO,QAAQ,CAAC,UAAU,MAAM,aAAa,qBAAqB,YAAY,CAAC;AAG/E,mBACG,cAAc,uBAAuB,mBAAmB,EACxD,aAAa,qBAAqB,QAAQ;AAC7C,mBACG,cAAc,qBAAqB,mBAAmB,EACtD,aAAa,qBAAqB,QAAQ;AAG7C,cAAI,YAAY;AACd,uBAAW,aAAa,2BAA2B,QAAQ;AAAA,UAC7D;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAGD,eAAS,iBAAiB,oBAAoB,EAAE,QAAQ,CAAC,aAAa;AACpE,iBAAS,iBAAiB,SAAS,cAAc;AAAA,MACnD,CAAC;AAGD,eAAS,iBAAiB,WAAW,SAAU,OAAO;AACpD,YAAI,MAAM,QAAQ,UAAU;AAC1B,yBAAe;AAAA,QACjB;AAAA,MACF,CAAC;AAGD,eAAS,iBAAiB;AACxB,qBAAa,QAAQ,CAAC,WAAW,OAAO,aAAa,qBAAqB,YAAY,CAAC;AAEvF,YAAI,YAAY;AACd,qBAAW,aAAa,2BAA2B,YAAY;AAAA,QACjE;AAAA,MACF;AAAA,IACF;AAEA,mBAAe;AAIf,aAAS,gBAAgB,SAAS,CAAC,GAAG;AACpC,YAAM,WAAW;AAAA,QACf,mBAAmB;AAAA,QACnB,eAAe;AAAA,QACf,eAAe;AAAA,QACf,gBAAgB;AAAA,QAChB,cAAc;AAAA,QACd,QAAQ,CAAC;AAAA,QACT,YAAY;AAAA,QACZ,aAAa;AAAA,MACf;AAEA,YAAM,WAAW,EAAE,GAAG,UAAU,GAAG,OAAO;AAC1C,YAAM,SAAS,EAAE,SAAS,aAAa;AACvC,YAAM,kBAAkB,EAAE,SAAS,iBAAiB;AACpD,UAAI,CAAC,gBAAgB;AAAQ;AAC7B,YAAM,QAAQ,OAAO,CAAC;AACtB,YAAM,SAAS,EAAE,SAAS,aAAa;AACvC,YAAM,cAAc,OAAO;AAE3B,eAAS,kBAAkB;AACzB,eAAO,OACJ,IAAI,CAAC,OAAO,UAAU;AACrB,gBAAM,eAAe,SAAS,OAAO,KAAK;AAC1C,gBAAM,cAAc,IAAI;AACxB,iBAAO;AAAA,YACL,SAAS,EAAE,KAAK;AAAA,YAChB,OAAO,cAAc,QAAQ;AAAA,YAC7B,KAAK,cAAc,MAAM;AAAA,UAC3B;AAAA,QACF,CAAC,EACA,IAAI;AAAA,MACT;AAGA,YAAM,QAAQ;AACd,YAAM,cAAc;AACpB,YAAM,aAAa,eAAe,EAAE;AACpC,YAAM,MAAM,aAAa;AAEzB,eAAS,oBAAoB;AAC3B,aAAK,eAAe,aAAa;AAEjC,cAAM,eAAe,gBAAgB;AACrC,YAAI,WAAW;AACf,YAAI;AACJ,YAAI,cAAc;AAGlB,cAAM,aAAa,CAAC;AACpB,cAAM,cAAc;AAGpB,iBAAS,gBAAgB,SAAS;AAEhC,qBAAW,KAAK,OAAO;AAGvB,iBAAO,WAAW,SAAS,aAAa;AACtC,uBAAW,MAAM;AAAA,UACnB;AAGA,cAAI,WAAW,SAAS;AAAG,mBAAO;AAGlC,cAAI,cAAc;AAClB,cAAI,cAAc;AAElB,mBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,kBAAM,SAAS,IAAI;AACnB,2BAAe,WAAW,CAAC,IAAI;AAC/B,2BAAe;AAAA,UACjB;AAEA,iBAAO,cAAc;AAAA,QACvB;AAGA,iBAAS,aAAa;AACpB,cAAI,CAAC;AAAa;AAElB,cAAI,KAAK,IAAI,aAAa,MAAM,WAAW,IAAI,MAAM;AACnD,kBAAM,cAAc;AAAA,UACtB;AAEA,gCAAsB,UAAU;AAAA,QAClC;AAGA,YAAI,aAAa;AAEjB,cAAM,KAAK,KAAK,SAAS;AAAA,UACvB,eAAe;AAAA,YACb,SAAS,SAAS;AAAA,YAClB,OAAO;AAAA,YACP,KAAK;AAAA,YACL,OAAO;AAAA;AAAA,YACP,UAAU,CAAC,SAAS;AAElB,oBAAM,gBAAgB,KAAK,WAAW,MAAM;AAG5C,2BAAa,gBAAgB,aAAa;AAG1C,kBAAI,CAAC,aAAa;AAChB,8BAAc;AACd,2BAAW;AAAA,cACb;AAGA,2BAAa,QAAQ,CAAC,WAAW;AAC/B,sBAAM,WAAW,SAAS;AAC1B,sBAAM,WAAW,OAAO,MAAM,OAAO;AACrC,sBAAM,eAAe,KAAK,IAAI,WAAW,UAAU,WAAW,CAAC;AAE/D,oBAAI,UAAU;AACd,oBAAI,KAAK,YAAY,OAAO,SAAS,KAAK,YAAY,OAAO,KAAK;AAChE,sBAAI,KAAK,WAAW,OAAO,QAAQ,cAAc;AAC/C,+BAAW,KAAK,WAAW,OAAO,SAAS;AAAA,kBAC7C,WAAW,KAAK,WAAW,OAAO,MAAM,cAAc;AACpD,+BAAW,OAAO,MAAM,KAAK,YAAY;AAAA,kBAC3C,OAAO;AACL,8BAAU;AAAA,kBACZ;AAAA,gBACF;AACA,uBAAO,QAAQ,IAAI,WAAW,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,OAAO,CAAC,CAAC;AAAA,cACjE,CAAC;AAAA,YACH;AAAA,YACA,SAAS,MAAM;AACb,2BAAa;AACb,oBAAM,cAAc;AAAA,YACtB;AAAA,YACA,SAAS,MAAM;AACb,2BAAa,MAAM;AACnB,oBAAM,cAAc,MAAM;AAAA,YAC5B;AAAA,YACA,aAAa,MAAM;AACjB,2BAAa,MAAM;AACnB,oBAAM,cAAc,MAAM;AAAA,YAC5B;AAAA,YACA,aAAa,MAAM;AACjB,2BAAa;AACb,oBAAM,cAAc;AAAA,YACtB;AAAA;AAAA,YAEA,eAAe;AAAA,UACjB;AAAA,QACF,CAAC;AAGD,sBAAc,iBAAiB,aAAa,WAAY;AACtD,wBAAc;AAAA,QAChB,CAAC;AAGD,iBAAS,iBAAiB,oBAAoB,WAAY;AACxD,wBAAc,CAAC,SAAS,UAAU,cAAc,YAAY;AAAA,QAC9D,CAAC;AAAA,MACH;AACA,eAAS,iBAAiBA,QAAO;AAC/B,eAAO,IAAI,QAAQ,CAAC,YAAY;AAE9B,UAAAA,OAAM,aAAa,WAAW,MAAM;AACpC,UAAAA,OAAM,aAAa,eAAe,EAAE;AACpC,UAAAA,OAAM,QAAQ;AAGd,UAAAA,OAAM,MAAM,UAAU;AACtB,UAAAA,OAAM,MAAM,aAAa;AAGzB,gBAAM,cAAc;AACpB,gBAAM,iBAAiB,IAAI,MAAM,WAAW,EAAE,KAAK,KAAK;AAGxD,mBAAS,oBAAoB;AAC3B,mBAAO,eAAe,MAAM,CAAC,YAAY,YAAY,IAAI;AAAA,UAC3D;AAGA,mBAAS,eAAe,OAAO;AAC7B,mBAAO,IAAI,QAAQ,CAACC,aAAY;AAC9B,oBAAM,kBAAkBD,OAAM,WAAW;AACzC,oBAAM,aAAa,QAAQ;AAE3B,sBAAQ;AAAA,gBACN,sBAAsB,QAAQ,KAAK,uBAAuB,WAAW,QAAQ,CAAC;AAAA,cAChF;AAGA,cAAAA,OAAM,cAAc;AAGpB,uBAAS,qBAAqB;AAE5B,oBAAIA,OAAM,eAAe,GAAG;AAC1B,iCAAe,KAAK,IAAI;AACxB,kBAAAC,SAAQ;AAAA,gBACV,OAAO;AAEL,6BAAW,oBAAoB,GAAG;AAAA,gBACpC;AAAA,cACF;AAGA,iCAAmB;AAAA,YACrB,CAAC;AAAA,UACH;AAGA,yBAAe,uBAAuB;AAEpC,gBAAID,OAAM,eAAe,GAAG;AAC1B,oBAAM,IAAI,QAAQ,CAACC,aAAY;AAC7B,gBAAAD,OAAM,iBAAiB,kBAAkBC,UAAS,EAAE,MAAM,KAAK,CAAC;AAChE,gBAAAD,OAAM,KAAK;AAAA,cACb,CAAC;AAAA,YACH;AAGA,gBAAI;AACF,cAAAA,OAAM,cAAc;AACpB,cAAAA,OAAM,eAAe;AACrB,oBAAMA,OAAM,KAAK;AAGjB,oBAAM,IAAI,QAAQ,CAACC,aAAY,WAAWA,UAAS,GAAI,CAAC;AACxD,cAAAD,OAAM,MAAM;AAAA,YACd,SAAS,KAAP;AACA,sBAAQ,KAAK,gCAAgC,GAAG;AAAA,YAClD;AAGA,qBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,oBAAM,eAAe,CAAC;AAGtB,kBAAI,SAAS,gBAAgB;AAC3B,sBAAM,aAAc,IAAI,KAAK,cAAe,KAAK,QAAQ,CAAC;AAC1D,kBAAE,SAAS,cAAc,EAAE,KAAK,gBAAgB,EAAE,KAAK,GAAG,WAAW;AAAA,cACvE;AAAA,YACF;AAGA,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,oBAAM,aAAa,KAAK,OAAO,IAAIA,OAAM;AACzC,cAAAA,OAAM,cAAc;AACpB,oBAAM,IAAI,QAAQ,CAACC,aAAY,WAAWA,UAAS,GAAG,CAAC;AAAA,YACzD;AAGA,YAAAD,OAAM,cAAc;AAGpB,YAAAA,OAAM,MAAM,UAAU;AACtB,YAAAA,OAAM,MAAM,aAAa;AAEzB,gBAAI,SAAS,gBAAgB;AAC3B,gBAAE,SAAS,cAAc,EAAE,KAAK;AAAA,YAClC;AAEA,gBAAI,SAAS,qBAAqB,SAAS,cAAc;AACvD,gBAAE,SAAS,iBAAiB,EAAE,YAAY,SAAS,YAAY;AAAA,YACjE;AAEA,oBAAQA,MAAK;AAAA,UACf;AAGA,+BAAqB,EAAE,MAAM,CAAC,QAAQ;AACpC,oBAAQ,MAAM,kCAAkC,GAAG;AAGnD,YAAAA,OAAM,MAAM,UAAU;AACtB,YAAAA,OAAM,MAAM,aAAa;AAEzB,gBAAI,SAAS,gBAAgB;AAC3B,gBAAE,SAAS,cAAc,EAAE,KAAK;AAAA,YAClC;AAEA,gBAAI,SAAS,qBAAqB,SAAS,cAAc;AACvD,gBAAE,SAAS,iBAAiB,EAAE,YAAY,SAAS,YAAY;AAAA,YACjE;AAEA,oBAAQA,MAAK;AAAA,UACf,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAGA,WAAK,IAAI,QAAQ,EAAE,SAAS,EAAE,CAAC;AAC/B,QAAE,SAAS,iBAAiB,EAAE,SAAS,SAAS,YAAY;AAG5D,uBAAiB,KAAK,EACnB,KAAK,MAAM;AAEV,0BAAkB;AAAA,MACpB,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,gBAAQ,IAAI,KAAK;AAAA,MACnB,CAAC;AAAA,IACL;AAEA,oBAAgB;AAAA,MACd,mBAAmB;AAAA,MACnB,QAAQ;AAAA,QACN,EAAE,OAAO,GAAG,KAAK,GAAG;AAAA;AAAA,QACpB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,IAAI;AAAA;AAAA,MACxB;AAAA,IACF,CAAC;AAED,oBAAgB;AAAA,MACd,mBAAmB;AAAA,MACnB,QAAQ;AAAA,QACN,EAAE,OAAO,GAAG,KAAK,GAAG;AAAA;AAAA,QACpB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,IAAI;AAAA;AAAA,MACxB;AAAA,IACF,CAAC;AAED,oBAAgB;AAAA,MACd,mBAAmB;AAAA,MACnB,QAAQ;AAAA,QACN,EAAE,OAAO,GAAG,KAAK,GAAG;AAAA;AAAA,QACpB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,GAAG;AAAA;AAAA,QACrB,EAAE,OAAO,IAAI,KAAK,IAAI;AAAA;AAAA,MACxB;AAAA,IACF,CAAC;AAAA,EAGH,CAAC;",
  "names": ["video", "resolve"]
}
